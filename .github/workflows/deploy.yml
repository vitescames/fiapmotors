name: Deploy to ECS (Fargate)

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
  IMAGE_TAG: ${{ github.sha }}
  ECR_REGISTRY: ${{ vars.ECR_REGISTRY }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Configura credenciais AWS (usando secrets)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      # Login no ECR
      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      # Build e push da imagem (Dockerfile na raiz do projeto)
      - name: Build Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}
          IMAGE_URI=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Push image to ECR
        run: |
          docker push ${ECR_REPOSITORY}:${IMAGE_TAG}
          docker push ${ECR_REPOSITORY}:latest

      # Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: infra
        run: terraform init

      # Passamos a tag nova via var; o resto vem do terraform.tfvars
      - name: Terraform Apply
        working-directory: infra
        env:
          TF_VAR_image_tag: ${{ env.IMAGE_TAG }}
        run: terraform apply -auto-approve